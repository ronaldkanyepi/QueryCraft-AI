"""initial migration

Revision ID: 6b139e0b2e7b
Revises:
Create Date: 2025-08-08 21:17:17.823344

"""

from typing import Sequence, Union

import pgvector
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6b139e0b2e7b"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_items_name"), "items", ["name"], unique=False)
    op.create_table(
        "langchain_pg_collection",
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("cmetadata", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "langchain_pg_embedding",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("embedding", pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False),
        sa.Column("document", sa.String(), nullable=True),
        sa.Column("cmetadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("collection_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["collection_id"], ["langchain_pg_collection.uuid"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_cmetadata_gin",
        "langchain_pg_embedding",
        ["cmetadata"],
        unique=False,
        postgresql_using="gin",
        postgresql_ops={"cmetadata": "jsonb_path_ops"},
    )
    op.create_index(
        "langchain_pg_embedding_embedding_idx",
        "langchain_pg_embedding",
        ["embedding"],
        unique=False,
        postgresql_using="hnsw",
        postgresql_with={"m": 16, "ef_construction": 64},
        postgresql_ops={"embedding": "vector_cosine_ops"},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "langchain_pg_embedding_embedding_idx",
        table_name="langchain_pg_embedding",
        postgresql_using="hnsw",
        postgresql_with={"m": 16, "ef_construction": 64},
        postgresql_ops={"embedding": "vector_cosine_ops"},
    )
    op.drop_index(
        "ix_cmetadata_gin",
        table_name="langchain_pg_embedding",
        postgresql_using="gin",
        postgresql_ops={"cmetadata": "jsonb_path_ops"},
    )
    op.drop_table("langchain_pg_embedding")
    op.drop_table("langchain_pg_collection")
    op.drop_index(op.f("ix_items_name"), table_name="items")
    op.drop_table("items")
    # ### end Alembic commands ###
